Monitor running at 60
PTB-INFO: Using modified PortAudio V19.6.0-devel, revision unknown
PsychPortAudio initialized. Will use CoreAudio for audio.
PTB-INFO: New audio device -1 with handle 0 opened as PortAudio stream:
PTB-INFO: For 2 channels Playback: Audio subsystem is Core Audio, Audio device name is Built-in Output
PTB-INFO: Real samplerate 10000.000000 Hz. Input latency 0.000000 msecs, Output latency 12.200000 msecs.
Compiling all shaders matching BasicGaborShader * into a GLSL program.
Building a fragment shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.frag.txt ...
Building a vertex shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.vert.txt ...
Building a vertex shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicSineGratingShader.vert.txt ...
Building a fragment shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/ApertureSineGratingShader.frag.txt ...
{Undefined function or variable 'angleGrat1'.

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('localizerProc', '/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/KIT/localizerProc.m', 104)" style="font-weight:bold">localizerProc</a> (<a href="matlab: opentoline('/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/KIT/localizerProc.m',104,0)">line 104</a>)
    thisAngle           = angleGrat1;

Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('presentPredAttStair', '/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/presentPredAttStair.m', 139)" style="font-weight:bold">presentPredAttStair</a> (<a href="matlab: opentoline('/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/presentPredAttStair.m',139,0)">line 139</a>)
        [p, lr] = localizerProc(p, lr);
} 
opentoline('/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/KIT/localizerProc.m',104,0)
demoGaborMA
<a href="matlab: opentoline('/Users/magdaaltman/Documents/0_MEG/PRED_ATT/ST_SEQ/KIT/demoGaborMA.m',9,1)">9   </a>imageDur            = 0.5;
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
[gaborid, gaborrect] = CreateProceduralGabor(window, centerX, centerY, [],[1,0,0, 0],[],[],[])
Compiling all shaders matching BasicGaborShader * into a GLSL program.
Building a fragment shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.frag.txt ...
Building a vertex shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.vert.txt ...

gaborid =

    12


gaborrect =

     0     0   300   300

dstRect             = OffsetRect(gaborrect, width/2-gaborrect/2, width/2-gaborrect/2);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('OffsetRect', '/Applications/Psychtoolbox/PsychRects/OffsetRect.m', 45)" style="font-weight:bold">OffsetRect</a> (<a href="matlab: opentoline('/Applications/Psychtoolbox/PsychRects/OffsetRect.m',45,0)">line 45</a>)
Wrong format of x or y in multipoint case: x and y must be 1-column vectors of matching size!
} 
dstRect             = OffsetRect(gaborrect, width/2, width/2);
phase = 0;
freq =  10;
contrast = 1;
aspectratio = 1;
thisAngle           = 0; %angleSet( select);        % random selection of grating angle
% %     select              = randi(2,1);
% %
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[0 0 0 0], [], 1, [phase+180, freq, sc,...
contrast, aspectratio, 0, 0, 0]);
{Undefined function or variable 'sc'.
} 
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[0 0 0 0], [], 1, []);
Screen('Flip', window);
dstRect             = OffsetRect(gaborrect, width/4, width/4);
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[0 0 0 0], [], 1, []);
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[1 0 0 0], [], 1, []);
[ vblImage] = Screen('Flip', window);
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[255 0 0 0], [], 1, []);
Screen('DrawLines', window, allCoords, fixCrossLineWidth, fixCrossColor);
[ vblImage] = Screen('Flip', window);
[gaborid, gaborrect] = CreateProceduralGabor(window, centerX, centerY, [],[255,0,0, 0],[],[],[])
Compiling all shaders matching BasicGaborShader * into a GLSL program.
Building a fragment shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.frag.txt ...
Building a vertex shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.vert.txt ...

gaborid =

    13


gaborrect =

     0     0   300   300

dstRect             = OffsetRect(gaborrect, width/4, width/4);
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[0 0 0 0], [], 1, []);
    Screen('DrawLines', window, allCoords, fixCrossLineWidth, fixCrossColor);
Screen('DrawLines', window, allCoords, fixCrossLineWidth, [255, 255, 255, 0]);
[ vblImage] = Screen('Flip', window);
[gaborid, gaborrect] = CreateProceduralGabor(window, centerX, centerY, [],backgroundColorOffset,[],[],[])
Compiling all shaders matching BasicGaborShader * into a GLSL program.
Building a fragment shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.frag.txt ...
Building a vertex shader:Reading shader from file /Applications/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/BasicGaborShader.vert.txt ...

gaborid =

    14


gaborrect =

     0     0   300   300

dstRect             = OffsetRect(gaborrect, width/4, width/4);
Screen('DrawTexture', window, gaborid, [], dstRect, thisAngle, [], [],...
[0 0 0 0], [], 1, []);
[ vblImage] = Screen('Flip', window);
if system_dependent('IsDebugMode')==1, dbquit; end
  sca
GarboriumDemo
Will draw 200 gabor patches per frame.


PsychImaging-Warning: You specified a 'clearcolor' argument for the OpenWindow command that looks 
like an old 0-255 value instead of the wanted value in the 0.0-1.0 range.
Please update your code for correct behaviour.


count =

   884


avgfps =

          59.5437667852652

GarboriumDemo
if system_dependent('IsDebugMode')==1, dbstep; end
Will draw 200 gabor patches per frame.
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end
if system_dependent('IsDebugMode')==1, dbstep; end


PsychImaging-Warning: You specified a 'clearcolor' argument for the OpenWindow command that looks 
like an old 0-255 value instead of the wanted value in the 0.0-1.0 range.
Please update your code for correct behaviour.

